<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>chan sensor, on, red, green;

//The switch duration between each light
const int sw_dur = 1;
//The duration of the yellow light
const int yel_dur = 5;
</declaration>
	<template>
		<name>Sensor</name>
		<location id="id0" x="-935" y="-6536">
			<name x="-952" y="-6570">On</name>
		</location>
		<location id="id1" x="-782" y="-6536">
			<name x="-782" y="-6570">Off</name>
		</location>
		<location id="id2" x="-858" y="-6579">
			<name x="-884" y="-6613">Queued</name>
			<committed/>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-935" y="-6596">sensor!</label>
			<nail x="-918" y="-6570"/>
			<nail x="-901" y="-6579"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<nail x="-816" y="-6579"/>
			<nail x="-799" y="-6570"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-867" y="-6494">on?</label>
			<nail x="-799" y="-6511"/>
			<nail x="-824" y="-6494"/>
			<nail x="-858" y="-6494"/>
			<nail x="-892" y="-6494"/>
			<nail x="-909" y="-6502"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Main</name>
		<parameter>const int min_dur</parameter>
		<declaration>clock z;</declaration>
		<location id="id3" x="-527" y="-196">
			<name x="-578" y="-221">Green</name>
		</location>
		<location id="id4" x="-527" y="-340">
			<label kind="invariant" x="-604" y="-374">z &lt;= sw_dur</label>
		</location>
		<location id="id5" x="-366" y="-340">
			<name x="-383" y="-391">Yellow</name>
			<label kind="invariant" x="-400" y="-374">z &lt;= yel_dur</label>
		</location>
		<location id="id6" x="-204" y="-340">
			<label kind="invariant" x="-196" y="-374">z &lt;= sw_dur</label>
		</location>
		<location id="id7" x="-204" y="-196">
			<name x="-196" y="-221">Red</name>
		</location>
		<location id="id8" x="-366" y="-196">
			<label kind="invariant" x="-400" y="-179">z &lt;= sw_dur</label>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="guard" x="-196" y="-289">z &gt;= sw_dur</label>
			<label kind="synchronisation" x="-196" y="-306">red!</label>
			<label kind="assignment" x="-196" y="-272">z:=0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="guard" x="-315" y="-365">z &gt;= yel_dur</label>
			<label kind="assignment" x="-315" y="-340">z:=0</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="-485" y="-365">z &gt;= sw_dur</label>
			<label kind="assignment" x="-485" y="-340">z:=0</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-621" y="-289">z &gt;= min_dur</label>
			<label kind="synchronisation" x="-621" y="-306">sensor?</label>
			<label kind="assignment" x="-621" y="-272">z:=0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id3"/>
			<label kind="guard" x="-476" y="-221">z &gt;= sw_dur</label>
			<label kind="assignment" x="-476" y="-195">z:=0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-306" y="-221">green?</label>
			<label kind="assignment" x="-298" y="-195">z:=0</label>
		</transition>
	</template>
	<template>
		<name>Side</name>
		<parameter>const int max_dur</parameter>
		<declaration>clock z;</declaration>
		<location id="id9" x="-102" y="-238">
			<label kind="invariant" x="-94" y="-272">z &lt;= sw_dur</label>
		</location>
		<location id="id10" x="-102" y="-161">
			<committed/>
		</location>
		<location id="id11" x="-263" y="-238">
			<name x="-280" y="-289">Yellow</name>
			<label kind="invariant" x="-297" y="-272">z &lt;= yel_dur</label>
		</location>
		<location id="id12" x="-425" y="-238">
			<label kind="invariant" x="-502" y="-272">z &lt;= sw_dur</label>
		</location>
		<location id="id13" x="-425" y="-85">
			<name x="-476" y="-110">Green</name>
			<label kind="invariant" x="-510" y="-68">z &lt;= max_dur</label>
		</location>
		<location id="id14" x="-272" y="-85">
			<label kind="invariant" x="-306" y="-68">z &lt;= sw_dur</label>
		</location>
		<location id="id15" x="-102" y="-85">
			<name x="-93" y="-110">Red</name>
		</location>
		<init ref="id15"/>
		<transition>
			<source ref="id15"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-187" y="-110">red?</label>
			<label kind="assignment" x="-187" y="-85">z:=0</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-93" y="-144">green!</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="-93" y="-212">z&gt;=sw_dur</label>
			<label kind="synchronisation" x="-93" y="-229">on!</label>
			<label kind="assignment" x="-93" y="-195">z:=0</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id9"/>
			<label kind="guard" x="-229" y="-255">z&gt;=yel_dur</label>
			<label kind="assignment" x="-212" y="-238">z:=0</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-382" y="-255">z &gt;= sw_dur</label>
			<label kind="assignment" x="-365" y="-238">z:=0</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="guard" x="-510" y="-187">z &gt;= max_dur</label>
			<label kind="assignment" x="-458" y="-170">z:=0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="guard" x="-374" y="-110">z&gt;=sw_dur</label>
			<label kind="assignment" x="-357" y="-85">z:=0</label>
		</transition>
	</template>
	<system>
mainStreet = Main(30);
sideStreet = Side(30);
sen = Sensor();

system mainStreet, sideStreet, sen; 

</system>
	<queries>
		<query>
			<formula>A[] not deadlock</formula>
			<comment>The system never deadlocks, i.e. it will enventualy change state.</comment>
		</query>
		<query>
			<formula>A[] (sideStreet.Green imply not mainStreet.Green) and (mainStreet.Green imply not sideStreet.Green)</formula>
			<comment>The minor-road and major-road lights cannot be green at the same time</comment>
		</query>
		<query>
			<formula>A[] (not sideStreet.Red imply mainStreet.Red) and (not mainStreet.Red imply sideStreet.Red)</formula>
			<comment>If the minor-road lights aren't red the major-road lights are red and viceversa.</comment>
		</query>
		<query>
			<formula>E&lt;&gt; sideStreet.Green</formula>
			<comment>The minor-road light can go green.</comment>
		</query>
		<query>
			<formula>E&lt;&gt; mainStreet.Red</formula>
			<comment>The main street can go red.</comment>
		</query>
		<query>
			<formula>sen.Queued --&gt; sideStreet.Green</formula>
			<comment>If there are cars waiting they will eventually have green light</comment>
		</query>
		<query>
			<formula>mainStreet.Red --&gt; mainStreet.Green</formula>
			<comment>The main street can never be permanently off</comment>
		</query>
	</queries>
</nta>
